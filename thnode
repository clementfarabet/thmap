#!/usr/bin/env luajit
thnode = require 'thmap.node'
-- async
require 'trepl'
require 'pl'
local async = require 'async'

-- options
local opt = lapp([[
thnode: a Torch compute node
   -p,--port       (default 10001)  port to listen to
   -l,--load       (default none)   run a script (typically to provide functionality)
   -k,--killdelay  (default 0)      kills (and restarts) job after N seconds of idleness
]])

local node = thnode(opt)

restart = node.restart
killall = node.killall
ps = node.ps
git = node.git
update = node.update
zombies = node.zombies

-- script?
if opt.load ~= 'none' then
   dofile(opt.load)
end

-- Remote command line:
local port = opt.port
while true do
   local ok = pcall(function()
      async.repl.listen({host='0.0.0.0', port=port}, function(client)
         local s = client.sockname
         hostname = s.address .. ':' .. s.port
      end)
   end)
   if ok then break end
   port = port + 1
end
print('thnode> waiting for jobs @ localhost:' .. port)


-- go
async.go()
